[project]
name = "qa-cloud-backend"
readme = "README.md"
version = "0.1.0"
description = ""
requires-python = ">= 3.11"
authors = [{ name = "Kelvin.Ye", email = "testmankelvin@163.com" }]
dependencies = [
    # flask
    "flask==3.0.3",
    "flask-migrate==4.0.7",
    "flask-socketio==5.4.1",
    "flask-sqlalchemy==3.1.1",
    "flask-apscheduler==1.13.1",
    # auth
    "pyjwt==2.9.0",
    # signal
    "blinker==1.9.0",
    # job
    "apscheduler==3.10.4",
    # environment
    "environs==11.0.0",
    "python-dotenv==1.0.1",
    # tool
    "munch==4.0.0",
    # 以下依赖的版本在 pymeter 中控制
    "arrow",
    "httpx",
    "json5",
    "loguru",
    "gevent",
    "orjson",
    "ulid-py",
    "pycryptodome",
    # 测试引擎
    "pymeter",
]

[tool.uv]
dev-dependencies = [
    "pip",
    "ruff",
    "pre-commit",
    "pytest",
    "pytest-html",
    "pytest-asyncio",
]

[tool.uv.sources]
pymeter = { path = "../pymeter" }

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = []

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 120
src = ["app"]
select = [
    "F",    # pyflakes
    "UP",   # pyupgrade
    "E",    # pycodestyle-error
    "W",    # pycodestyle-warning
    "D",    # pydocstyle
    "I",    # isort
]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D107",
    "D415"
]
exclude = [
    "__pycache__",
    ".venv",
    ".vscode",
]
extend-include = ["*.ipynb"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
force-single-line = true
lines-after-imports = 2
lines-between-types = 1

[tool.ruff.format]
line-ending = "lf"
quote-style = "single"
skip-magic-trailing-comma = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = [
    "--color=auto",
    "--capture=tee-sys",
    "--code-highlight=yes",
    "--disable-warnings",
    "--html=report.html",
    "--self-contained-html"
]
testpaths = ["tests"]
filterwarnings = ["error"]
required_plugins = ["pytest-html"]
log_cli = true
log_level = "INFO"
log_format = "[%(asctime)s][%(levelname)s][%(name)s.%(funcName)s:%(lineno)d] %(message)s"

[[tool.uv.index]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"